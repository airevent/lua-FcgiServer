--

local net = require "net"
local std = require "std"

--

local req = {
    0x01, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00,
    0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x04, 0x00, 0x01, 0x01, 0xcc, 0x04, 0x00,
    0x08, 0x16, 0x4c, 0x55, 0x41, 0x5f, 0x50, 0x41,
    0x54, 0x48, 0x2f, 0x73, 0x72, 0x76, 0x2f, 0x68,
    0x74, 0x74, 0x70, 0x2f, 0x6c, 0x75, 0x61, 0x2f,
    0x74, 0x65, 0x73, 0x74, 0x2e, 0x6c, 0x75, 0x61,
    0x08, 0x09, 0x4c, 0x55, 0x41, 0x5f, 0x41, 0x52,
    0x47, 0x53, 0x61, 0x3d, 0x31, 0x26, 0x62, 0x3d,
    0x6c, 0x6f, 0x6c, 0x09, 0x0e, 0x48, 0x54, 0x54,
    0x50, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x6c, 0x6f,
    0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a,
    0x38, 0x30, 0x39, 0x30, 0x0f, 0x0a, 0x48, 0x54,
    0x54, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
    0x43, 0x54, 0x49, 0x4f, 0x4e, 0x6b, 0x65, 0x65,
    0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12,
    0x09, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x43, 0x41,
    0x43, 0x48, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
    0x52, 0x4f, 0x4c, 0x6d, 0x61, 0x78, 0x2d, 0x61,
    0x67, 0x65, 0x3d, 0x30, 0x0b, 0x4a, 0x48, 0x54,
    0x54, 0x50, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50,
    0x54, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x68, 0x74,
    0x6d, 0x6c, 0x2c, 0x61, 0x70, 0x70, 0x6c, 0x69,
    0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78,
    0x68, 0x74, 0x6d, 0x6c, 0x2b, 0x78, 0x6d, 0x6c,
    0x2c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x6d, 0x6c,
    0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x39, 0x2c, 0x69,
    0x6d, 0x61, 0x67, 0x65, 0x2f, 0x77, 0x65, 0x62,
    0x70, 0x2c, 0x2a, 0x2f, 0x2a, 0x3b, 0x71, 0x3d,
    0x30, 0x2e, 0x38, 0x1e, 0x01, 0x48, 0x54, 0x54,
    0x50, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44,
    0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x55,
    0x52, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
    0x53, 0x54, 0x53, 0x31, 0x0f, 0x69, 0x48, 0x54,
    0x54, 0x50, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
    0x41, 0x47, 0x45, 0x4e, 0x54, 0x4d, 0x6f, 0x7a,
    0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30,
    0x20, 0x28, 0x58, 0x31, 0x31, 0x3b, 0x20, 0x4c,
    0x69, 0x6e, 0x75, 0x78, 0x20, 0x78, 0x38, 0x36,
    0x5f, 0x36, 0x34, 0x29, 0x20, 0x41, 0x70, 0x70,
    0x6c, 0x65, 0x57, 0x65, 0x62, 0x4b, 0x69, 0x74,
    0x2f, 0x35, 0x33, 0x37, 0x2e, 0x33, 0x36, 0x20,
    0x28, 0x4b, 0x48, 0x54, 0x4d, 0x4c, 0x2c, 0x20,
    0x6c, 0x69, 0x6b, 0x65, 0x20, 0x47, 0x65, 0x63,
    0x6b, 0x6f, 0x29, 0x20, 0x43, 0x68, 0x72, 0x6f,
    0x6d, 0x65, 0x2f, 0x34, 0x37, 0x2e, 0x30, 0x2e,
    0x32, 0x35, 0x32, 0x36, 0x2e, 0x31, 0x30, 0x36,
    0x20, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x2f,
    0x35, 0x33, 0x37, 0x2e, 0x33, 0x36, 0x14, 0x13,
    0x48, 0x54, 0x54, 0x50, 0x5f, 0x41, 0x43, 0x43,
    0x45, 0x50, 0x54, 0x5f, 0x45, 0x4e, 0x43, 0x4f,
    0x44, 0x49, 0x4e, 0x47, 0x67, 0x7a, 0x69, 0x70,
    0x2c, 0x20, 0x64, 0x65, 0x66, 0x6c, 0x61, 0x74,
    0x65, 0x2c, 0x20, 0x73, 0x64, 0x63, 0x68, 0x14,
    0x17, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x41, 0x43,
    0x43, 0x45, 0x50, 0x54, 0x5f, 0x4c, 0x41, 0x4e,
    0x47, 0x55, 0x41, 0x47, 0x45, 0x65, 0x6e, 0x2d,
    0x55, 0x53, 0x2c, 0x65, 0x6e, 0x3b, 0x71, 0x3d,
    0x30, 0x2e, 0x38, 0x2c, 0x72, 0x75, 0x3b, 0x71,
    0x3d, 0x30, 0x2e, 0x36, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
};

for i,code in ipairs(req) do
    req[i] = string.char(code)
end

req = table.concat(req)

local conns = {}
local n = 4

for i=1,n do
    local sock = assert(net.ip4.tcp.socket(1))
    local r, es, en = sock:connect("127.0.0.1", 9100)

    if not r and en ~= net.e.EINPROGRESS then
        error(es)
    end

    table.insert(conns, sock)
end

std.sleep(1)

for i,sock in ipairs(conns) do
    local r, es, en = sock:send(req)

    if not r then
        error("query "..i.." failed: "..tostring(es))
    elseif r ~= #req then
        error("query "..i.." failed: r != #req ("..math.tointeger(r).." != "..#req..")")
    else
        print(i, "oke")
    end
end

std.sleep(1)
